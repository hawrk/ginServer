// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: user_video_list.proto

package user_video_list

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SearchUserVideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	RequestVideoSize int64 `protobuf:"varint,2,opt,name=requestVideoSize,proto3" json:"requestVideoSize,omitempty"`
}

func (x *SearchUserVideoReq) Reset() {
	*x = SearchUserVideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_video_list_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserVideoReq) ProtoMessage() {}

func (x *SearchUserVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_video_list_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserVideoReq.ProtoReflect.Descriptor instead.
func (*SearchUserVideoReq) Descriptor() ([]byte, []int) {
	return file_user_video_list_proto_rawDescGZIP(), []int{0}
}

func (x *SearchUserVideoReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SearchUserVideoReq) GetRequestVideoSize() int64 {
	if x != nil {
		return x.RequestVideoSize
	}
	return 0
}

type SearchUserVideoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int64        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                           // 错误码 ，200 为成功
	Uid       int64        `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                             // 用户ID
	Uname     string       `protobuf:"bytes,3,opt,name=uname,proto3" json:"uname,omitempty"`                          // 用户名，缺省
	VideoList []*VideoInfo `protobuf:"bytes,4,rep,name=video_list,json=videoList,proto3" json:"video_list,omitempty"` //视频列表
}

func (x *SearchUserVideoRsp) Reset() {
	*x = SearchUserVideoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_video_list_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserVideoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserVideoRsp) ProtoMessage() {}

func (x *SearchUserVideoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_video_list_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserVideoRsp.ProtoReflect.Descriptor instead.
func (*SearchUserVideoRsp) Descriptor() ([]byte, []int) {
	return file_user_video_list_proto_rawDescGZIP(), []int{1}
}

func (x *SearchUserVideoRsp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchUserVideoRsp) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SearchUserVideoRsp) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *SearchUserVideoRsp) GetVideoList() []*VideoInfo {
	if x != nil {
		return x.VideoList
	}
	return nil
}

type VideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid             int64  `protobuf:"varint,1,opt,name=vid,proto3" json:"vid,omitempty"`                                                // 视频id
	Author          string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`                                           // 作者
	Title           string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                             // 标题
	Desc            string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`                                               // 视频描述
	VideoUrl        string `protobuf:"bytes,5,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`                       // 视频URL
	PicutureUrl     string `protobuf:"bytes,6,opt,name=picuture_url,json=picutureUrl,proto3" json:"picuture_url,omitempty"`              // 图片URL
	Tag             string `protobuf:"bytes,7,opt,name=tag,proto3" json:"tag,omitempty"`                                                 //标签
	AlgorithmPolicy int32  `protobuf:"varint,8,opt,name=algorithm_policy,json=algorithmPolicy,proto3" json:"algorithm_policy,omitempty"` //召回策略
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_video_list_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_video_list_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_user_video_list_proto_rawDescGZIP(), []int{2}
}

func (x *VideoInfo) GetVid() int64 {
	if x != nil {
		return x.Vid
	}
	return 0
}

func (x *VideoInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *VideoInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *VideoInfo) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *VideoInfo) GetPicutureUrl() string {
	if x != nil {
		return x.PicutureUrl
	}
	return ""
}

func (x *VideoInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *VideoInfo) GetAlgorithmPolicy() int32 {
	if x != nil {
		return x.AlgorithmPolicy
	}
	return 0
}

var File_user_video_list_proto protoreflect.FileDescriptor

var file_user_video_list_proto_rawDesc = []byte{
	0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7b, 0x0a, 0x12, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x09, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x69, 0x63, 0x75, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x69, 0x63, 0x75, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x29, 0x0a, 0x10,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x32, 0x54, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x56,
	0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x13, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x13, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_video_list_proto_rawDescOnce sync.Once
	file_user_video_list_proto_rawDescData = file_user_video_list_proto_rawDesc
)

func file_user_video_list_proto_rawDescGZIP() []byte {
	file_user_video_list_proto_rawDescOnce.Do(func() {
		file_user_video_list_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_video_list_proto_rawDescData)
	})
	return file_user_video_list_proto_rawDescData
}

var file_user_video_list_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_user_video_list_proto_goTypes = []interface{}{
	(*SearchUserVideoReq)(nil), // 0: SearchUserVideoReq
	(*SearchUserVideoRsp)(nil), // 1: SearchUserVideoRsp
	(*VideoInfo)(nil),          // 2: VideoInfo
}
var file_user_video_list_proto_depIdxs = []int32{
	2, // 0: SearchUserVideoRsp.video_list:type_name -> VideoInfo
	0, // 1: UserVideService.SearchUserVideoList:input_type -> SearchUserVideoReq
	1, // 2: UserVideService.SearchUserVideoList:output_type -> SearchUserVideoRsp
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_user_video_list_proto_init() }
func file_user_video_list_proto_init() {
	if File_user_video_list_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_video_list_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserVideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_video_list_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserVideoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_video_list_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_video_list_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_video_list_proto_goTypes,
		DependencyIndexes: file_user_video_list_proto_depIdxs,
		MessageInfos:      file_user_video_list_proto_msgTypes,
	}.Build()
	File_user_video_list_proto = out.File
	file_user_video_list_proto_rawDesc = nil
	file_user_video_list_proto_goTypes = nil
	file_user_video_list_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserVideServiceClient is the client API for UserVideService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserVideServiceClient interface {
	SearchUserVideoList(ctx context.Context, in *SearchUserVideoReq, opts ...grpc.CallOption) (*SearchUserVideoRsp, error)
}

type userVideServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserVideServiceClient(cc grpc.ClientConnInterface) UserVideServiceClient {
	return &userVideServiceClient{cc}
}

func (c *userVideServiceClient) SearchUserVideoList(ctx context.Context, in *SearchUserVideoReq, opts ...grpc.CallOption) (*SearchUserVideoRsp, error) {
	out := new(SearchUserVideoRsp)
	err := c.cc.Invoke(ctx, "/UserVideService/SearchUserVideoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserVideServiceServer is the server API for UserVideService service.
type UserVideServiceServer interface {
	SearchUserVideoList(context.Context, *SearchUserVideoReq) (*SearchUserVideoRsp, error)
}

// UnimplementedUserVideServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserVideServiceServer struct {
}

func (*UnimplementedUserVideServiceServer) SearchUserVideoList(context.Context, *SearchUserVideoReq) (*SearchUserVideoRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUserVideoList not implemented")
}

func RegisterUserVideServiceServer(s *grpc.Server, srv UserVideServiceServer) {
	s.RegisterService(&_UserVideService_serviceDesc, srv)
}

func _UserVideService_SearchUserVideoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchUserVideoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserVideServiceServer).SearchUserVideoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserVideService/SearchUserVideoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserVideServiceServer).SearchUserVideoList(ctx, req.(*SearchUserVideoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserVideService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UserVideService",
	HandlerType: (*UserVideServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchUserVideoList",
			Handler:    _UserVideService_SearchUserVideoList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_video_list.proto",
}
